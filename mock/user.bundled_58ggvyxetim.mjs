// mock/user.ts
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "111111",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "111111",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/api/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/api/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
export {
  user_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay91c2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXFdlYlxcXFx2dWUzXFxcXGRlbW9cXFxcSG91dGFpRGVtb1xcXFxtb2NrXFxcXHVzZXIudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRDpcXFxcV2ViXFxcXHZ1ZTNcXFxcZGVtb1xcXFxIb3V0YWlEZW1vXFxcXG1vY2tcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0Q6L1dlYi92dWUzL2RlbW8vSG91dGFpRGVtby9tb2NrL3VzZXIudHNcIjsvL1x1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NjU3MFx1NjM2RVxyXG5mdW5jdGlvbiBjcmVhdGVVc2VyTGlzdCgpIHtcclxuICByZXR1cm4gW1xyXG4gICAge1xyXG4gICAgICB1c2VySWQ6IDEsXHJcbiAgICAgIGF2YXRhcjpcclxuICAgICAgICAnaHR0cHM6Ly93cGltZy53YWxsc3Rjbi5jb20vZjc3ODczOGMtZTRmOC00ODcwLWI2MzQtNTY3MDNiNGFjYWZlLmdpZicsXHJcbiAgICAgIHVzZXJuYW1lOiAnYWRtaW4nLFxyXG4gICAgICBwYXNzd29yZDogJzExMTExMScsXHJcbiAgICAgIGRlc2M6ICdcdTVFNzNcdTUzRjBcdTdCQTFcdTc0MDZcdTU0NTgnLFxyXG4gICAgICByb2xlczogWydcdTVFNzNcdTUzRjBcdTdCQTFcdTc0MDZcdTU0NTgnXSxcclxuICAgICAgYnV0dG9uczogWydjdXNlci5kZXRhaWwnXSxcclxuICAgICAgcm91dGVzOiBbJ2hvbWUnXSxcclxuICAgICAgdG9rZW46ICdBZG1pbiBUb2tlbicsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB1c2VySWQ6IDIsXHJcbiAgICAgIGF2YXRhcjpcclxuICAgICAgICAnaHR0cHM6Ly93cGltZy53YWxsc3Rjbi5jb20vZjc3ODczOGMtZTRmOC00ODcwLWI2MzQtNTY3MDNiNGFjYWZlLmdpZicsXHJcbiAgICAgIHVzZXJuYW1lOiAnc3lzdGVtJyxcclxuICAgICAgcGFzc3dvcmQ6ICcxMTExMTEnLFxyXG4gICAgICBkZXNjOiAnXHU3Q0ZCXHU3RURGXHU3QkExXHU3NDA2XHU1NDU4JyxcclxuICAgICAgcm9sZXM6IFsnXHU3Q0ZCXHU3RURGXHU3QkExXHU3NDA2XHU1NDU4J10sXHJcbiAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJywgJ2N1c2VyLnVzZXInXSxcclxuICAgICAgcm91dGVzOiBbJ2hvbWUnXSxcclxuICAgICAgdG9rZW46ICdTeXN0ZW0gVG9rZW4nLFxyXG4gICAgfSxcclxuICBdXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICAvLyBcdTc1MjhcdTYyMzdcdTc2N0JcdTVGNTVcdTYzQTVcdTUzRTNcclxuICB7XHJcbiAgICB1cmw6ICcvYXBpL3VzZXIvbG9naW4nLCAvL1x1OEJGN1x1NkM0Mlx1NTczMFx1NTc0MFxyXG4gICAgbWV0aG9kOiAncG9zdCcsIC8vXHU4QkY3XHU2QzQyXHU2NUI5XHU1RjBGXHJcbiAgICByZXNwb25zZTogKHsgYm9keSB9KSA9PiB7XHJcbiAgICAgIC8vXHU4M0I3XHU1M0Q2XHU4QkY3XHU2QzQyXHU0RjUzXHU2NDNBXHU1RTI2XHU4RkM3XHU2NzY1XHU3Njg0XHU3NTI4XHU2MjM3XHU1NDBEXHU0RTBFXHU1QkM2XHU3ODAxXHJcbiAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSBib2R5XHJcbiAgICAgIC8vXHU4QzAzXHU3NTI4XHU4M0I3XHU1M0Q2XHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU1MUZEXHU2NTcwLFx1NzUyOFx1NEU4RVx1NTIyNFx1NjVBRFx1NjYyRlx1NTQyNlx1NjcwOVx1NkI2NFx1NzUyOFx1NjIzN1xyXG4gICAgICBjb25zdCBjaGVja1VzZXIgPSBjcmVhdGVVc2VyTGlzdCgpLmZpbmQoXHJcbiAgICAgICAgKGl0ZW0pID0+IGl0ZW0udXNlcm5hbWUgPT09IHVzZXJuYW1lICYmIGl0ZW0ucGFzc3dvcmQgPT09IHBhc3N3b3JkLFxyXG4gICAgICApXHJcbiAgICAgIC8vXHU2Q0ExXHU2NzA5XHU3NTI4XHU2MjM3XHU4RkQ0XHU1NkRFXHU1OTMxXHU4RDI1XHU0RkUxXHU2MDZGXHJcbiAgICAgIGlmICghY2hlY2tVc2VyKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAxLCBkYXRhOiB7IG1lc3NhZ2U6ICdcdThEMjZcdTUzRjdcdTYyMTZcdTgwMDVcdTVCQzZcdTc4MDFcdTRFMERcdTZCNjNcdTc4NkUnIH0gfVxyXG4gICAgICB9XHJcbiAgICAgIC8vXHU1OTgyXHU2NzlDXHU2NzA5XHU4RkQ0XHU1NkRFXHU2MjEwXHU1MjlGXHU0RkUxXHU2MDZGXHJcbiAgICAgIGNvbnN0IHsgdG9rZW4gfSA9IGNoZWNrVXNlclxyXG4gICAgICByZXR1cm4geyBjb2RlOiAyMDAsIGRhdGE6IHsgdG9rZW4gfSB9XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgLy8gXHU4M0I3XHU1M0Q2XHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHJcbiAge1xyXG4gICAgdXJsOiAnL2FwaS91c2VyL2luZm8nLFxyXG4gICAgbWV0aG9kOiAnZ2V0JyxcclxuICAgIHJlc3BvbnNlOiAocmVxdWVzdCkgPT4ge1xyXG4gICAgICAvL1x1ODNCN1x1NTNENlx1OEJGN1x1NkM0Mlx1NTkzNFx1NjQzQVx1NUUyNnRva2VuXHJcbiAgICAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5oZWFkZXJzLnRva2VuXHJcbiAgICAgIC8vXHU2N0U1XHU3NzBCXHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU2NjJGXHU1NDI2XHU1MzA1XHU1NDJCXHU2NzA5XHU2QjIxdG9rZW5cdTc1MjhcdTYyMzdcclxuICAgICAgY29uc3QgY2hlY2tVc2VyID0gY3JlYXRlVXNlckxpc3QoKS5maW5kKChpdGVtKSA9PiBpdGVtLnRva2VuID09PSB0b2tlbilcclxuICAgICAgLy9cdTZDQTFcdTY3MDlcdThGRDRcdTU2REVcdTU5MzFcdThEMjVcdTc2ODRcdTRGRTFcdTYwNkZcclxuICAgICAgaWYgKCFjaGVja1VzZXIpIHtcclxuICAgICAgICByZXR1cm4geyBjb2RlOiAyMDEsIGRhdGE6IHsgbWVzc2FnZTogJ1x1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTkzMVx1OEQyNScgfSB9XHJcbiAgICAgIH1cclxuICAgICAgLy9cdTU5ODJcdTY3OUNcdTY3MDlcdThGRDRcdTU2REVcdTYyMTBcdTUyOUZcdTRGRTFcdTYwNkZcclxuICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBkYXRhOiB7IGNoZWNrVXNlciB9IH1cclxuICAgIH0sXHJcbiAgfSxcclxuXVxyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsU0FBUyxpQkFBaUI7QUFDeEIsU0FBTztBQUFBLElBQ0w7QUFBQSxNQUNFLFFBQVE7QUFBQSxNQUNSLFFBQ0U7QUFBQSxNQUNGLFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLE1BQU07QUFBQSxNQUNOLE9BQU8sQ0FBQyxnQ0FBTztBQUFBLE1BQ2YsU0FBUyxDQUFDLGNBQWM7QUFBQSxNQUN4QixRQUFRLENBQUMsTUFBTTtBQUFBLE1BQ2YsT0FBTztBQUFBLElBQ1Q7QUFBQSxJQUNBO0FBQUEsTUFDRSxRQUFRO0FBQUEsTUFDUixRQUNFO0FBQUEsTUFDRixVQUFVO0FBQUEsTUFDVixVQUFVO0FBQUEsTUFDVixNQUFNO0FBQUEsTUFDTixPQUFPLENBQUMsZ0NBQU87QUFBQSxNQUNmLFNBQVMsQ0FBQyxnQkFBZ0IsWUFBWTtBQUFBLE1BQ3RDLFFBQVEsQ0FBQyxNQUFNO0FBQUEsTUFDZixPQUFPO0FBQUEsSUFDVDtBQUFBLEVBQ0Y7QUFDRjtBQUVBLElBQU8sZUFBUTtBQUFBO0FBQUEsRUFFYjtBQUFBLElBQ0UsS0FBSztBQUFBO0FBQUEsSUFDTCxRQUFRO0FBQUE7QUFBQSxJQUNSLFVBQVUsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUV0QixZQUFNLEVBQUUsVUFBVSxTQUFTLElBQUk7QUFFL0IsWUFBTSxZQUFZLGVBQWUsRUFBRTtBQUFBLFFBQ2pDLENBQUMsU0FBUyxLQUFLLGFBQWEsWUFBWSxLQUFLLGFBQWE7QUFBQSxNQUM1RDtBQUVBLFVBQUksQ0FBQyxXQUFXO0FBQ2QsZUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsU0FBUyx5REFBWSxFQUFFO0FBQUEsTUFDckQ7QUFFQSxZQUFNLEVBQUUsTUFBTSxJQUFJO0FBQ2xCLGFBQU8sRUFBRSxNQUFNLEtBQUssTUFBTSxFQUFFLE1BQU0sRUFBRTtBQUFBLElBQ3RDO0FBQUEsRUFDRjtBQUFBO0FBQUEsRUFFQTtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLFlBQVk7QUFFckIsWUFBTSxRQUFRLFFBQVEsUUFBUTtBQUU5QixZQUFNLFlBQVksZUFBZSxFQUFFLEtBQUssQ0FBQyxTQUFTLEtBQUssVUFBVSxLQUFLO0FBRXRFLFVBQUksQ0FBQyxXQUFXO0FBQ2QsZUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsU0FBUyxtREFBVyxFQUFFO0FBQUEsTUFDcEQ7QUFFQSxhQUFPLEVBQUUsTUFBTSxLQUFLLE1BQU0sRUFBRSxVQUFVLEVBQUU7QUFBQSxJQUMxQztBQUFBLEVBQ0Y7QUFDRjsiLAogICJuYW1lcyI6IFtdCn0K
